syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.maxima.sales.cli.grpc";
option java_outer_classname = "SalesProto";

package grpc;

// -------------------------------------------------------------------------
// The sales service definition.
service Sales {
  rpc EditCot (CotRequest) returns (CotResponse) {}
  rpc EditPedido (PedidoRequest) returns (PedidoResponse) {}
  rpc CancelPedido (PedidoCancelRequest) returns (PedidoCancelResponse) {}
  rpc AuthPedido (PedidoAuthRequest) returns (PedidoAuthResponse) {}
  rpc EditPrefactura (PrefacturaRequest) returns (PrefacturaResponse) {}
  rpc PostCfdiJsonIntoAwsEvent (AwsEventRequest) returns (AwsEventResponse) {}
}


// -------------------------------------------------------------------------
// The request message containing the quotation's parameters
message CotRequest {
  int32 usuarioId            = 1;
  int32 identificador        = 2;
  int32 selectTipoCotizacion = 3;
  int32 idClienteOProspecto  = 4;
  bool checkDescripcionLarga = 5;
  string observaciones       = 6;
  double tipoCambio          = 7;
  int32 monedaId             = 8;
  string fecha               = 9;
  int32 agenteId             = 10;
  int32 vigencia             = 11;
  bool incluyeIva            = 12;
  double tcUSD               = 13;
  int32 tiempoEntregaId      = 14;

  message GridRenglonCot {
    int32 removido            = 1;
    int32 idDetalle           = 2;
    int32 idProducto          = 3;
    int32 idPresentacion      = 4;
    double cantidad           = 5;
    double precio             = 6;
    int32 monedaGrId          = 7;
    string notr               = 8;
    int32 idImpProd           = 9;
    double valorImp           = 10;
    int32 unidadId            = 11;
    bool statusAutorizacion   = 12;
    double precioAutorizado   = 13;
    int32 idUserAut           = 14;
    bool requiereAutorizacion = 15;
    string salvarRegistro     = 16;
  }
  repeated GridRenglonCot extraData = 15;
}

// The response message containing the quotation's create/edit operation results
message CotResponse {
  string valorRetorno = 1;
}


// -------------------------------------------------------------------------
// The request message containing the sales order's parameters
message PedidoRequest {
  int32 usuarioId           = 1;
  int32 agenteId            = 2;
  int32 clienteId           = 3;
  int32 clienteDfId         = 4;
  int32 almacenId           = 5;
  int32 monedaId            = 6;
  int32 provCrediasId       = 7;
  int32 cfdiMetPagoId       = 8;
  int32 formaPagoId         = 9;
  int32 cfdiUsoId           = 10;
  int32 pedidoId            = 11;
  double tasaRetencionImmex = 12;
  double tipoCambio         = 13;
  double porcentajeDescto   = 14;
  bool desctoAllowed        = 15;
  bool enviarObserFac       = 16;
  bool fleteEnabled         = 17;
  bool enviarRuta           = 18;
  string observaciones      = 19;
  string motivoDescto       = 20;
  string transporte         = 21;
  string fechaCompromiso    = 22;
  string lugarEntrega       = 23;
  string ordenCompra        = 24;
  string numCuenta          = 25;
  string folioCot           = 26;

  message GridRenglonPedido {
    int32 id              = 1;
    int32 toKeep          = 2;
    int32 invProdId       = 3;
    int32 presentacionId  = 4;
    double cantidad       = 5;
    double precioUnitario = 6;
    int32 gralImpId       = 7;
    double valorImp       = 8;
    int32 invProdUnidadId = 9;
    int32 gralIepsId      = 10;
    double valorIeps      = 11;
    double descto         = 12;
    int32 cotId           = 13;
    int32 cotDetalleId    = 14;
    bool requiereAut      = 15;
    bool autorizado       = 16;
    double precioAut      = 17;
    int32 gralUsrIdAut    = 18;
    int32 gralImptosRetId = 19;
    double tasaRet        = 20;
    int32 invProdAliasId  = 21;
  }
  repeated GridRenglonPedido gridDetalle = 27;
}

// The response message containing the sales order's create/edit operation results
message PedidoResponse {
  string valorRetorno = 1;
}


// -------------------------------------------------------------------------
// The request message containing the sales order's cancellation parameters
message PedidoCancelRequest {
  int32 pedidoId  = 1;
  int32 usuarioId = 2;
}

// The response message containing the sales order's cancellation results
message PedidoCancelResponse {
  string valorRetorno = 1;
}


// -------------------------------------------------------------------------
// The request message containing the sales order's authorization parameters
message PedidoAuthRequest {
  int32 pedidoId  = 1;
  int32 usuarioId = 2;
}

// The response message containing the sales order's authorization results
message PedidoAuthResponse {
  string valorRetorno = 1;
}


// -------------------------------------------------------------------------
// The request message containing the Prefactura edition parameters
message PrefacturaRequest {
  int32 usuarioId        = 1;
  int32 prefacturaId     = 2;
  int32 clienteId        = 3;
  int32 monedaId         = 4;
  string observaciones   = 5;
  double tipoCambio      = 6;
  int32 vendedorId       = 7;
  int32 condicionesId    = 8;
  string ordenCompra     = 9;
  bool refacturar        = 10;
  int32 metodoPagoId     = 11;
  string noCuenta        = 12;
  int32 tipoDocumento    = 13;
  int32 monedaOriginalId = 14;
  string adenda1         = 15;
  string adenda2         = 16;
  string adenda3         = 17;
  string adenda4         = 18;
  string adenda5         = 19;
  string adenda6         = 20;
  string adenda7         = 21;
  string adenda8         = 22;
  bool permitirDescto    = 23;

  message GridRenglonPrefactura {
    int32 toKeep          = 1;
    int32 id              = 2;
    int32 productoId      = 3;
    int32 presentacionId  = 4;
    int32 tipoImpuestoId  = 5;
    double cantidad       = 6;
    double precioUnitario = 7;
    double valorImp       = 8;
    int32 remisionId      = 9;
    double costoPromedio  = 10;
    int32 invProdUnidadId = 11;
    int32 gralIepsId      = 12;
    double valorIeps      = 13;
    double descto         = 14;
    int32 gralImptosRetId = 15;
    double tasaRet        = 16;
  }
  repeated GridRenglonPrefactura gridDetalle = 24;
}

// The response message containing the Prefactura edition results
message PrefacturaResponse {
  string valorRetorno = 1;
}

// -------------------------------------------------------------------------
// The request message containing the AwsEvent parameters
message AwsEventRequest {
  int32 usuarioId     = 1;
  int32 prefacturaId  = 2;
  string serie        = 3;
  string folio        = 4;
}

// The response message containing the AwsEvent results
message AwsEventResponse {
  string valorRetorno = 1;
  string jsonRepr     = 2;
}
